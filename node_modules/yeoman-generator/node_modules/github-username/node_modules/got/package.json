{
  "name": "got",
  "version": "2.4.0",
  "description": "Simplified HTTP/HTTPS requests",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/got"
  },
  "maintainers": [
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    {
      "name": "Vsevolod Strukchinsky",
      "email": "floatdrop@gmail.com",
      "url": "github.com/floatdrop"
    }
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "taper test/test-*.js"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "http",
    "https",
    "get",
    "got",
    "url",
    "uri",
    "request",
    "util",
    "utility",
    "simple"
  ],
  "dependencies": {
    "duplexify": "^3.2.0",
    "infinity-agent": "^1.0.0",
    "is-stream": "^1.0.0",
    "lowercase-keys": "^1.0.0",
    "object-assign": "^2.0.0",
    "prepend-http": "^1.0.0",
    "read-all-stream": "^1.0.0",
    "statuses": "^1.2.1",
    "timed-out": "^2.0.0"
  },
  "devDependencies": {
    "from2-array": "0.0.3",
    "pem": "^1.4.4",
    "tape": "^3.0.3",
    "taper": "^0.3.0"
  },
  "readme": "# got [![Build Status](https://travis-ci.org/sindresorhus/got.svg?branch=master)](https://travis-ci.org/sindresorhus/got)\n\n> Simplified HTTP/HTTPS requests\n\nA nicer interface to the built-in [`http`](http://nodejs.org/api/http.html) module.\n\nIt also supports following redirects, streams, and automagically handling gzip/deflate.\n\nUse [request](https://github.com/mikeal/request) if you need more.\n\n\n## Install\n\n```sh\n$ npm install --save got\n```\n\n\n## Usage\n\n```js\nvar got = require('got');\n\n// Callback mode\ngot('todomvc.com', function (err, data, res) {\n\tconsole.log(data);\n\t//=> <!doctype html> ...\n});\n\n\n// Stream mode\ngot('todomvc.com').pipe(fs.createWriteStream('index.html'));\n\n// For POST, PUT and PATCH methods got returns a WritableStream\nfs.createReadStream('index.html').pipe(got.post('todomvc.com'));\n```\n\n### API\n\nIt's a `GET` request by default, but can be changed in `options`.\n\n#### got(url, [options], [callback])\n\n##### url\n\n*Required*  \nType: `string`\n\nThe URL to request.\n\n##### options\n\nType: `object`\n\nAny of the [`http.request`](http://nodejs.org/api/http.html#http_http_request_options_callback) options.\n\n##### options.encoding\n\nType: `string`, `null`  \nDefault: `'utf8'`\n\nEncoding to be used on `setEncoding` of the response data. If null, the body is returned as a Buffer.\n\n##### options.body\n\nType: `string`, `Buffer`, `ReadableStream`  \n\nBody, that will be sent with `POST` request. If present in `options` and `options.method` is not set - `options.method` will be set to `POST`.\n\nThis option and stream mode are mutually exclusive.\n\n##### options.timeout\n\nType: `number`\n\nMilliseconds after which the request will be aborted and an error event with `ETIMEDOUT` code will be emitted.\n\n##### options.agent\n\n[http.Agent](http://nodejs.org/api/http.html#http_class_http_agent) instance.\n\nNode HTTP/HTTPS Agent in [0.10](https://github.com/joyent/node/blob/v0.10.35-release/lib/http.js#L1261) by default limits number of open sockets to 5 — which is too low. If `options.agent` is not defined `got` will use [infinity-agent](https://github.com/floatdrop/infinity-agent) to backport `defaultMaxSockets` from [0.11](https://github.com/joyent/node/blob/v0.11.14-release/lib/_http_agent.js#L110).\n\n[Why pooling is evil](https://github.com/substack/hyperquest#pooling-is-evil).\n\nTo use default [globalAgent](http://nodejs.org/api/http.html#http_http_globalagent) just pass `null` to this option.\n\n##### callback(err, data, response)\n\n###### err\n\n`Error` object with HTTP status code as `code` property.\n\n###### data\n\nThe data you requested.\n\n###### response\n\nThe [response object](http://nodejs.org/api/http.html#http_http_incomingmessage).\n\n#### got.get(url, [options], [callback])\n#### got.post(url, [options], [callback])\n#### got.put(url, [options], [callback])\n#### got.patch(url, [options], [callback])\n#### got.head(url, [options], [callback])\n#### got.delete(url, [options], [callback])\n\nSets `options.method` to the method name and makes a request.\n\n\n## Proxy\n\nYou can use the [`tunnel`](https://github.com/koichik/node-tunnel) module with the `agent` option to work with proxies:\n\n```js\nvar got = require('got');\nvar tunnel = require('tunnel');\n\ngot('todomvc.com', {\n\tagent: tunnel.httpOverHttp({\n\t\tproxy: {\n\t\t\thost: 'localhost'\n\t\t}\n\t})\n}, function (err, data, res) {});\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/got/issues"
  },
  "homepage": "https://github.com/sindresorhus/got",
  "_id": "got@2.4.0",
  "_shasum": "e4087a2cd59b5d20f2d169dc85d2169ed9e89f56",
  "_from": "got@^2.3.0",
  "_resolved": "https://registry.npmjs.org/got/-/got-2.4.0.tgz"
}
